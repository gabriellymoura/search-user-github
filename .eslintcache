[{"C:\\Users\\User\\Documents\\web_dev\\api-github\\src\\App.js":"1","C:\\Users\\User\\Documents\\web_dev\\api-github\\src\\index.js":"2","C:\\Users\\User\\Documents\\web_dev\\api-github\\src\\reportWebVitals.js":"3"},{"size":2526,"mtime":1610637431611,"results":"4","hashOfConfig":"5"},{"size":543,"mtime":1610630444416,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1610629181849,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"1gl50vn",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\Documents\\web_dev\\api-github\\src\\App.js",["15","16","17","18","19","20"],"import logo from './logo.svg';\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport { Form, Card, Icon, Image } from 'semantic-ui-react';\n\nfunction App() {\n  const [name, setName] = useState('');\n  const [user, setUser] = useState('');\n  const [followers, setFollowers] = useState('');\n  const [following, setFollowing] = useState('');\n  const [repos, setRepos] = useState('');\n  const [avatar, setAvatar] = useState('');\n  const [userInput, setUserInput] = useState('');\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    fetch('https://api.github.com/users/exemple')\n      .then(response => {response.json().then(data => setData(data))})\n      .catch(e => console.log(\"Erro: \"+e.message))\n  }, [])\n\n  const setData = ({\n    name,\n    login,\n    followers,\n    following,\n    public_repos,\n    avatar_url\n  }) =>{\n    setName(name);\n    setUser(login);\n    setFollowers(followers);\n    setFollowing(following);\n    setRepos(public_repos);\n    setAvatar(avatar_url);\n  };\n\n  const escolheUser = e =>{\n    setUserInput(e.target.value);\n  };\n\n  const buscaUser = () =>{\n    fetch(`https://api.github.com/users/${userInput}`)\n      .then(response => {response.json().then(data => setData(data))})\n      .catch(e => console.log(\"Erro: \"+e.message))\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"navbar\">\n        <h1>Github Search</h1>\n      </div>\n      \n      <div className = \"busca\">\n        <Form onSubmit={buscaUser}>\n            <Form.Group>\n              <Form.Input placeholder='Github User' name='github user' onChange = {escolheUser}/>\n              <Form.Button content='Buscar' />\n            </Form.Group>\n          </Form>\n      </div>\n  \n      <div className='card'>\n        <Card className = 'cardSettings' >\n          <Image src={avatar} wrapped ui={false} />\n          <Card.Content>\n            <Card.Header>{name}</Card.Header>\n            <Card.Header>{user}</Card.Header>\n          </Card.Content>\n          <Card.Content extra>\n            <a>\n              <Icon name='user' />\n              {followers} Followers\n            </a>\n          </Card.Content>\n          <Card.Content extra>\n            <a>\n              <Icon name='user' />\n              {repos} Repos\n            </a>\n          </Card.Content>\n          <Card.Content extra>\n            <a>\n              <Icon name='user' />\n              {following} Following\n            </a>\n          </Card.Content>\n        </Card>\n        \n      </div>\n    </div>\n    \n  );\n}\n\nexport default App;\n","C:\\Users\\User\\Documents\\web_dev\\api-github\\src\\index.js",[],"C:\\Users\\User\\Documents\\web_dev\\api-github\\src\\reportWebVitals.js",[],{"ruleId":"21","severity":1,"message":"22","line":1,"column":8,"nodeType":"23","messageId":"24","endLine":1,"endColumn":12},{"ruleId":"21","severity":1,"message":"25","line":14,"column":10,"nodeType":"23","messageId":"24","endLine":14,"endColumn":15},{"ruleId":"21","severity":1,"message":"26","line":14,"column":17,"nodeType":"23","messageId":"24","endLine":14,"endColumn":25},{"ruleId":"27","severity":1,"message":"28","line":71,"column":13,"nodeType":"29","endLine":71,"endColumn":16},{"ruleId":"27","severity":1,"message":"28","line":77,"column":13,"nodeType":"29","endLine":77,"endColumn":16},{"ruleId":"27","severity":1,"message":"28","line":83,"column":13,"nodeType":"29","endLine":83,"endColumn":16},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement"]